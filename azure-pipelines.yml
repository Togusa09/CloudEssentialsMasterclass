# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- task: DotNetCoreCLI@2
  inputs:
    command: 'publish'
    publishWebProjects: true
    arguments: '--configuration $(buildConfiguration) -o $(Build.ArtifactStagingDirectory)/Output'
    workingDirectory: './source/MasterclassApp'

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: AzureResourceManagerTemplateDeployment@3
  inputs:
    deploymentScope: 'Resource Group'
    azureResourceManagerConnection: '$(ArmConnection)'
    subscriptionId: '$(SubscriptionId)'
    action: 'Create Or Update Resource Group'
    resourceGroupName: '$(ResourceGroup)'
    location: 'East US'
    templateLocation: 'Linked artifact'
    csmFile: './scripts/environment.bicep'
    overrideParameters: '-sqlServerAdministratorLogin $(sqlServerAdministratorLogin) -sqlServerAdministratorLoginPassword $(sqlServerAdministratorLoginPassword) -evironmentType Development'
    deploymentMode: 'Incremental'
    deploymentOutputs: 'outputStorageVar'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: |
      $obj = ConvertFrom-Json '$(outputStorageVar)'
      Write-Host "##vso[task.setvariable variable=appServiceAppName]$($obj.appServiceAppName.value)"
      Write-Host "##vso[task.setvariable variable=appServiceAppHostName]$($obj.appServiceAppHostName.value)"

- task: AzureWebApp@1
  inputs:
    azureSubscription: '$(ArmConnection)'
    appType: 'webAppLinux'
    appName: '$(appServiceAppName)'
    package: '$(Build.ArtifactStagingDirectory)/Output/**/*.zip'